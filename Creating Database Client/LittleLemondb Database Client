{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d3efb13f-d68c-4b9f-baec-38c1a437de7c",
   "metadata": {},
   "source": [
    "# LittleLemonDB Capstone Project\n",
    "Creating a database client for Little Lemon using the Mysql python connector API/driver to interact with Little Lemon's database.\n",
    "Updating and deleting records in a MySQL database using Python."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c41ba104-24b1-4b2a-8afa-91c45444f789",
   "metadata": {},
   "source": [
    "# Prerequisite\n",
    "To complete this exercise, you must have access to the little_lemon database. As an authorized user, you need to establish a connection between Python and the database via the connector API and create a cursor object."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "739b967b-74a0-4bf7-8d3f-58e96e014f9f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import mysql.connector as connector"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6686a68-da7c-4252-8b2f-02547b97cd23",
   "metadata": {},
   "source": [
    "#### Task 1\n",
    "\n",
    "In the previous exercise you created a Python environment. In the first task of this exercise, you are tasked with extending the environment to connect with your database and interact with the data it holds. \n",
    "\n",
    "Your first step is to import the connector module, enter your user details and connect with the database (Hint: you can use an alias when importing the module).\n",
    "\n",
    "This gives you access to all the functionality available from the connector API, which can be accessed through the variable named connector (or whichever alias you choose). \n",
    "\n",
    "To connect with your database, you can call the connect method of the connector class and pass in your details using the following code: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b0e1b6c8-ee21-4873-81c9-5da00ea8ea21",
   "metadata": {},
   "outputs": [],
   "source": [
    "# call the connect method of the connector class and pass in your details using the following code: \n",
    "connection=connector.connect(user=\"root\", # use your own\n",
    "                             password=\"Lemon0422!$\", # use your own\n",
    "                             database=\"littlelemondb\"\n",
    "                            )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "37a521c8-7642-43f9-b573-c6e0d3228a34",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a cursor object to communicate with entire MySQL database\n",
    "cursor = connection.cursor()\n",
    "cursor.execute(\"USE littlelemondb\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ffa3bd50-7cbf-40d0-8a5b-bd669539fcd3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('bookings',)\n",
      "('customer details',)\n",
      "('menu',)\n",
      "('order delivery status',)\n",
      "('orders',)\n",
      "('ordersview',)\n",
      "('staff information',)\n"
     ]
    }
   ],
   "source": [
    "show_tables_query = \"SHOW tables\" \n",
    "cursor.execute(show_tables_query)\n",
    "results = cursor.fetchall()\n",
    "\n",
    "# Printing tables in database\n",
    "for row in results:\n",
    "    print(row)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "63d2c89b-84f3-410b-a6d3-5d74c11e5d68",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('Tables_in_littlelemondb',)\n",
      "('bookings',)\n",
      "('customer details',)\n",
      "('menu',)\n",
      "('order delivery status',)\n",
      "('orders',)\n",
      "('ordersview',)\n",
      "('staff information',)\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "SELECT Customers.Names, Customers.Contacts, Orders.TotalCost AS `BillAmount`\n",
    "FROM littlelemondb.customerdetails\n",
    "JOIN littlelemondb.orders\n",
    "ON customerdetails.CustomerID = Orders.CustomerID\n",
    "WHERE Orders.TotalCost > 60;\n",
    "\"\"\"\n",
    "cursor.execute(show_tables_query)\n",
    "results = cursor.fetchall()\n",
    "\n",
    "# Printing results\n",
    "print(cursor.column_names)\n",
    "for row in results:\n",
    "    print(row)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3a58073d-b284-4997-bdf9-31a293d104aa",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
